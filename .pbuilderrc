# Codenames for Debian suites according to their alias. Update these when
# needed.
UNSTABLE_CODENAME="sid"
TESTING_CODENAME="jessie"
STABLE_CODENAME="wheezy"
STABLE_BACKPORTS_SUITE="${STABLE_CODENAME}-backports"

# List of Debian suites.
DEBIAN_SUITES=(${UNSTABLE_CODENAME} ${TESTING_CODENAME} ${STABLE_CODENAME}
    "unstable" "testing" "stable")

# List of Ubuntu suites. Update these when needed.
UBUNTU_SUITES=("utopic" "trusty" "saucy" "raring" "quantal" "precise" "oneiric" "natty" "lucid" "hardy")

# Mirrors to use. Update these to your preferred mirror.
DEBIAN_MIRROR="ftp.fr.debian.org"
UBUNTU_MIRROR="fr.archive.ubuntu.com"

# Set the debootstrap variant to 'buildd' type.
DEBOOTSTRAPOPTS=(
    '--variant=buildd'
#    '--keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg'
    )
# or unset it to make it not a buildd type.
# unset DEBOOTSTRAPOPTS

# Optionally use the changelog of a package to determine the suite to use if
# none set.
if [[ -z "${DIST}" ]]; then
    if [[ -r "debian/changelog" ]]; then
       DIST=$(dpkg-parsechangelog | awk '/^Distribution: / {print $2}')
       # Use the unstable suite for Debian experimental packages.
       if [[ "${DIST}" == "experimental" ]]; then
           DIST="unstable"
       fi
    fi
fi

# Optionally set a default distribution if none is used. Note that you can set
# your own default (i.e. ${DIST:="unstable"}).
: ${DIST:="$(lsb_release --short --codename)"}

# Optionally change Debian codenames in $DIST to their aliases.
case "${DIST}" in
    ${UNSTABLE_CODENAME})
        DIST="unstable"
    ;;
    ${TESTING_CODENAME})
        DIST="testing"
    ;;
    ${STABLE_CODENAME})
        DIST="stable"
    ;;
esac

# Optionally set the architecture to the host architecture if none set. Note
# that you can set your own default (i.e. ${ARCH:="i386"}).
: ${ARCH:="$(dpkg --print-architecture)"}

NAME="${DIST}"
if [ -n "${ARCH}" ]; then
    NAME="${NAME}-${ARCH}"
    DEBOOTSTRAPOPTS=("--arch" "${ARCH}" "${DEBOOTSTRAPOPTS[@]}")
fi
BASETGZ="/home/pbuilder/${NAME}-base.tgz"
DISTRIBUTION="${DIST}"
BUILDRESULT="/home/pbuilder/${NAME}/result/"
APTCACHE="/home/pbuilder/${NAME}/aptcache/"
BUILDPLACE="/home/pbuilder/${NAME}/build/"

case "${DIST}" in
    ${UNSTABLE_CODENAME}|${TESTING_CODENAME}|${STABLE_CODENAME}|unstable|testing|stable)
        # Debian configuration
        MIRRORSITE="http://${DEBIAN_MIRROR}/debian/"
        COMPONENTS="main contrib non-free"
        if $(echo "${STABLE_CODENAME} stable" | grep -q $DIST); then
            OTHERMIRROR="${OTHERMIRROR} | deb ${MIRRORSITE} ${STABLE_BACKPORTS_SUITE} ${COMPONENTS}"
        fi
    ;;
    utopic|trusty|saucy|raring|quantal|precise|oneiric|natty|lucid|hardy)
        # Ubuntu configuration
        MIRRORSITE="http://${UBUNTU_MIRROR}/ubuntu/"
        COMPONENTS="main restricted universe multiverse"
    ;;
    *)
        echo "Unknown distribution: ${DIST}"
        exit 1
    ;;
esac

#EXTRAPACKAGES=""
#export DEBIAN_BUILDARCH=athlon
#OTHERMIRROR="deb http://www.home.com/updates/ ./"
#export http_proxy=http://your-proxy:8080/
USEPROC=yes
USEDEVPTS=yes
USERUNSHM=yes
USEDEVFS=no

# specifying the architecture passes --arch= to debootstrap; the default is
# to use the architecture of the host
#ARCHITECTURE=`dpkg --print-architecture`
# specifying the components of the distribution, for instance to enable all
# components on Debian use "main contrib non-free" and on Ubuntu "main
# restricted universe multiverse"
COMPONENTS="main"
#specify the cache for APT 
APTCACHEHARDLINK="yes"
REMOVEPACKAGES=""
#HOOKDIR="/usr/lib/pbuilder/hooks"
HOOKDIR=""
# NB: this var is private to pbuilder; ccache uses "CCACHE_DIR" instead
CCACHEDIR=""

# make debconf not interact with user
export DEBIAN_FRONTEND="noninteractive"

export LC_ALL="fr_FR.UTF-8"
export LANG="fr_FR.UTF-8"
export LANGUAGE="fr_FR.UTF-8"
DEBEMAIL="RaphaÃ«l 'SurcouF' Bordet <surcouf@debianfr.net>"

#for pbuilder debuild
BUILDSOURCEROOTCMD="fakeroot"
PBUILDERROOTCMD="sudo -E"

#PDEBUILD_PBUILDER="cowbuilder"

# additional build results to copy out of the package build area
#ADDITIONAL_BUILDRESULTS=(xunit.xml .coverage)

# command to satisfy build-dependencies; the default is an internal shell
# implementation which is relatively slow; there are two alternate
# implementations, the "experimental" implementation,
# "pbuilder-satisfydepends-experimental", which might be useful to pull
# packages from experimental or from repositories with a low APT Pin Priority,
# and the "aptitude" implementation, which will resolve build-dependencies and
# build-conflicts with aptitude which helps dealing with complex cases but does
# not support unsigned APT repositories
PBUILDERSATISFYDEPENDSCMD="/usr/lib/pbuilder/pbuilder-satisfydepends"

# Arguments for $PBUILDERSATISFYDEPENDSCMD.
# PBUILDERSATISFYDEPENDSOPT=()

# You can optionally make pbuilder accept untrusted repositories by setting
# this option to yes, but this may allow remote attackers to compromise the
# system. Better set a valid key for the signed (local) repository with
# $APTKEYRINGS (see below).
ALLOWUNTRUSTED=no

# Option to pass to apt-get always.
export APTGETOPT=()
# Option to pass to aptitude always.
export APTITUDEOPT=()

#Command-line option passed on to dpkg-buildpackage.
#DEBBUILDOPTS="-IXXX -iXXX"
DEBBUILDOPTS=""

#APT configuration files directory
APTCONFDIR=""

# the username and ID used by pbuilder, inside chroot. Needs fakeroot, really
BUILDUSERID=1234
BUILDUSERNAME=pbuilder

# BINDMOUNTS is a space separated list of things to mount
# inside the chroot.
BINDMOUNTS=""

# Keyrings to use for package verification with apt, not used for debootstrap
# (use DEBOOTSTRAPOPTS). By default the debian-archive-keyring package inside
# the chroot is used.
APTKEYRINGS=()

# Set the PATH I am going to use inside pbuilder: default is "/usr/sbin:/usr/bin:/sbin:/bin"
export PATH="/usr/sbin:/usr/bin:/sbin:/bin"

# SHELL variable is used inside pbuilder by commands like 'su'; and they need sane values
export SHELL=/bin/bash

# The name of debootstrap command, you might want "cdebootstrap".
DEBOOTSTRAP="debootstrap"

# default file extension for pkgname-logfile
PKGNAME_LOGFILE_EXTENTION="_$(dpkg --print-architecture).build"

# default PKGNAME_LOGFILE
PKGNAME_LOGFILE=""

# default AUTOCLEANAPTCACHE
AUTOCLEANAPTCACHE=""

#default COMPRESSPROG
COMPRESSPROG="gzip"
